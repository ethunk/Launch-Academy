  [1m[36mActiveRecord::SchemaMigration Load (0.8ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (18.0ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "ar_internal_metadata"."value" FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1[0m  [["key", "environment"]]
  [1m[35mSQL (0.7ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (289.0ms)[0m  [1m[35mDROP TABLE "articles" CASCADE[0m
  [1m[35m (125.1ms)[0m  [1m[35mCREATE TABLE "articles" ("id" serial primary key, "title" character varying NOT NULL, "url" text NOT NULL, "description" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (0.5ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (0.5ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20170405142139)[0m
  [1m[36mActiveRecord::InternalMetadata Load (16.8ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.3ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[35mSQL (22.5ms)[0m  [1m[35mCREATE EXTENSION IF NOT EXISTS "plpgsql"[0m
  [1m[35m (264.5ms)[0m  [1m[35mCREATE TABLE "articles" ("id" serial primary key, "title" character varying NOT NULL, "url" text NOT NULL, "description" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[35m (4.2ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" character varying PRIMARY KEY)[0m
  [1m[35m (0.6ms)[0m  [1m[34mSELECT version FROM "schema_migrations"[0m
  [1m[35m (1.0ms)[0m  [1m[32mINSERT INTO "schema_migrations" (version) VALUES (20170405142139)[0m
  [1m[35m (3.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" character varying PRIMARY KEY, "value" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL)[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.7ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "key"[0m  [["key", "environment"], ["value", "development"], ["created_at", "2017-07-10 17:02:42.357686"], ["updated_at", "2017-07-10 17:02:42.357686"]]
  [1m[35m (13.8ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.4ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = $1 LIMIT $2[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35m (0.2ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[36mArticle Load (0.5ms)[0m  [1m[34mSELECT  "articles".* FROM "articles" WHERE "articles"."title" = $1 LIMIT $2[0m  [["title", "Why does Ember.js rock?"], ["LIMIT", 1]]
  [1m[35m (0.9ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (2.1ms)[0m  [1m[32mINSERT INTO "articles" ("title", "url", "description", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["title", "Why does Ember.js rock?"], ["url", "https://kerricklong.com/articles/why-ember-js-rocks.html"], ["description", "Ember.js is a MVC (Model â€“ View â€“ Controller) JavaScript framework which is maintained by the Ember Core Team (including Tom Dale, Yehuda Katz, and others). It helps developers create ambitious single-page web applications that don't sacrifice what makes the web great: URI semantics, RESTful architecture, and the write-once, run-anywhere trio of HTML, CSS, and JavaScript."], ["created_at", "2017-07-10 17:02:42.573454"], ["updated_at", "2017-07-10 17:02:42.573454"]]
  [1m[35m (25.6ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mArticle Load (0.4ms)[0m  [1m[34mSELECT  "articles".* FROM "articles" WHERE "articles"."title" = $1 LIMIT $2[0m  [["title", "Mozilla Playdoh"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.8ms)[0m  [1m[32mINSERT INTO "articles" ("title", "url", "description", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["title", "Mozilla Playdoh"], ["url", "http://playdoh.readthedocs.org/en/latest/"], ["description", "Mozilla's Playdoh is a web application template based on Django. Django is a high-level Python Web framework that encourages rapid development and clean, pragmatic design. Playdoh is simply a pre-configured Django project that adds some essential modules and middleware."], ["created_at", "2017-07-10 17:02:42.619810"], ["updated_at", "2017-07-10 17:02:42.619810"]]
  [1m[35m (6.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mArticle Load (0.4ms)[0m  [1m[34mSELECT  "articles".* FROM "articles" WHERE "articles"."title" = $1 LIMIT $2[0m  [["title", "Gigablast Search Engine, Now Open Source (C/C++)"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "articles" ("title", "url", "description", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["title", "Gigablast Search Engine, Now Open Source (C/C++)"], ["url", "https://www.gigablast.com/"], ["description", "Gigablast is the first truly transparent search engine. It tells you exactly why the search results are ranked the way they are. There is nothing left to the imagination."], ["created_at", "2017-07-10 17:02:42.629632"], ["updated_at", "2017-07-10 17:02:42.629632"]]
  [1m[35m (0.3ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mArticle Load (0.3ms)[0m  [1m[34mSELECT  "articles".* FROM "articles" WHERE "articles"."title" = $1 LIMIT $2[0m  [["title", "Node.js Deployments with Docker, Dokku, & Digital Ocean"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  [1m[32mINSERT INTO "articles" ("title", "url", "description", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["title", "Node.js Deployments with Docker, Dokku, & Digital Ocean"], ["url", "https://medium.com/code-adventures/438bce155dcb"], ["description", "DigitalOcean is a really nice cloud hosting company that offers excellent performance at affordable rates. Docker is an abstraction on top of LXC Containers. Docker introduces a workflow that makes operating containers straightforward and lots of fun. If you want to learn more about docker I suggest you read this article. Dokku is a tiny program that allows you to easily deploy your applications. It was built by progrium (from localtunnel) on top of docker, Buildstep, gitreceive, pluginhook, nginx, Heroku BuildPacks,& sshcommand."], ["created_at", "2017-07-10 17:02:42.632655"], ["updated_at", "2017-07-10 17:02:42.632655"]]
  [1m[35m (2.1ms)[0m  [1m[35mCOMMIT[0m
  [1m[36mArticle Load (0.7ms)[0m  [1m[34mSELECT  "articles".* FROM "articles" WHERE "articles"."title" = $1 LIMIT $2[0m  [["title", "Build a Blog Engine in Go"], ["LIMIT", 1]]
  [1m[35m (0.2ms)[0m  [1m[35mBEGIN[0m
  [1m[35mSQL (0.6ms)[0m  [1m[32mINSERT INTO "articles" ("title", "url", "description", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["title", "Build a Blog Engine in Go"], ["url", "http://0value.com/build-a-blog-engine-in-Go"], ["description", "A static blog generator in Go. Itâ€™s called trofaf because thatâ€™s its name. Get this: it takes markdown files, reads some YAML front matter, and generates good olâ€™ HTML files. I can already smell the Nobel. Anyway, the goal of this post is not to brag about the novelty of the thing, but to show how easy it is to get this done with Goâ€™s rich standard library and some fine userland packages."], ["created_at", "2017-07-10 17:02:42.638161"], ["updated_at", "2017-07-10 17:02:42.638161"]]
  [1m[35m (0.4ms)[0m  [1m[35mCOMMIT[0m
Started GET "/" for 127.0.0.1 at 2017-07-10 10:03:09 -0700
  [1m[36mActiveRecord::SchemaMigration Load (0.7ms)[0m  [1m[34mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by ArticlesController#index as HTML
  Rendering articles/index.html.erb within layouts/application
  [1m[36mArticle Load (0.7ms)[0m  [1m[34mSELECT "articles".* FROM "articles"[0m
  Rendered articles/index.html.erb within layouts/application (19.6ms)
Completed 200 OK in 363ms (Views: 351.8ms | ActiveRecord: 7.5ms)


Started GET "/" for 127.0.0.1 at 2017-07-10 10:22:28 -0700
Processing by ArticlesController#index as HTML
  Rendering articles/index.html.erb within layouts/application
  [1m[36mArticle Load (0.9ms)[0m  [1m[34mSELECT "articles".* FROM "articles"[0m
  Rendered articles/index.html.erb within layouts/application (2.9ms)
Completed 200 OK in 215ms (Views: 179.5ms | ActiveRecord: 0.9ms)


Started GET "/articles/1" for 127.0.0.1 at 2017-07-10 10:29:17 -0700
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"1"}
  [1m[36mArticle Load (0.4ms)[0m  [1m[34mSELECT  "articles".* FROM "articles" WHERE "articles"."id" = $1 LIMIT $2[0m  [["id", 1], ["LIMIT", 1]]
  Rendering articles/show.html.erb within layouts/application
  Rendered articles/show.html.erb within layouts/application (1.2ms)
Completed 200 OK in 310ms (Views: 19.1ms | ActiveRecord: 0.8ms)


Started GET "/articles/2" for 127.0.0.1 at 2017-07-10 10:29:23 -0700
Processing by ArticlesController#show as HTML
  Parameters: {"id"=>"2"}
  [1m[36mArticle Load (1.1ms)[0m  [1m[34mSELECT  "articles".* FROM "articles" WHERE "articles"."id" = $1 LIMIT $2[0m  [["id", 2], ["LIMIT", 1]]
  Rendering articles/show.html.erb within layouts/application
  Rendered articles/show.html.erb within layouts/application (1.1ms)
Completed 200 OK in 21ms (Views: 17.8ms | ActiveRecord: 1.1ms)


